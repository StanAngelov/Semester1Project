@model Semester1Project.Models.Job

@{
    ViewBag.Title = "Edit Job";
}

<div class="titlebar">Edit Job</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label>Job name</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="button" value="Mark as complete" class="btn btn-default col-xs-12" onclick="@("window.location.href='" + @Url.Action("MarkDone/"+Model.JobId) + "'");" />

        <div class="form-group">
            <label>Description</label>
            <div class="col-md-12 descriptionarea">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Location</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Date</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger", @type = "date" })
            </div>
        </div>

        <div class="form-group">
            <label>Expected hours</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.ExpectedHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpectedHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Payment</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Payment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Max workers</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.MaxWorkers, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxWorkers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-12">
                @Html.HiddenFor(model => model.JobId)
                <input type="submit" value="Save" class="btn btn-default col-xs-12" />
                <br />
                <input type="button" value="Delete" class="btn btn-default col-xs-12" onclick="@("window.location.href='" + @Url.Action("DeleteJob/"+Model.JobId) + "'");" />
                <br />
                @if (Convert.ToInt32(ViewBag.Workers) < Model.MaxWorkers)
                {
                @:<input type="button" value="Applicants" class="btn btn-default col-xs-12" onclick="@("window.location.href='" + @Url.Action("Applicants/" + Model.JobId) + "'");" />
                }


            </div>
        </div>
    </div>
}
